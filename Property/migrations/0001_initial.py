# Generated by Django 5.1.4 on 2025-01-05 19:50

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=50)),
                ('Image', models.ImageField(upload_to='Location/')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('Main_Image', models.ImageField(upload_to='Property/')),
                ('Price', models.IntegerField(default=0)),
                ('Description', models.TextField(max_length=10000)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('Category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Property_Category', to='Property.category')),
                ('Location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Property_Location', to='Property.location')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DateIn', models.DateField(default=django.utils.timezone.now)),
                ('DateOut', models.DateField(default=django.utils.timezone.now)),
                ('Guests', models.CharField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], max_length=2)),
                ('Children', models.CharField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], max_length=2)),
                ('Property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Property_Booking', to='Property.property')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Booking_User', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Image', models.ImageField(upload_to='Property_Images/')),
                ('Property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Property_Images', to='Property.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)])),
                ('Feedback', models.TextField(max_length=2000)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('Author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Review_Auther', to=settings.AUTH_USER_MODEL)),
                ('Property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Property_Review', to='Property.property')),
            ],
        ),
    ]
